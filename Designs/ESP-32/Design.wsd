@startuml ClassDiagram
Title Class Diagram

Class Controller
{
    {method} + void Setup()
    {method} + void Loop()
}

Class WiFiHandler
{
    {field} - WiFiData Data
    {method} + WiFiHandler(WiFiData Data)
    {method} + bool IsConnected()
    {method} + void Connect()
    {method} + void Disconnect()
}

Class WebSocketHandler
{
    {field} - WebsocketData Data
    {method} + WebSocketHandler(WebsocketData Data)
    {method} + void Send(string Json)
    {method} + string Receive()
    {method} + bool Connect()
    {method} + bool IsConnected()
    {method} + void Disconnect()
}

Struct WebsocketData
{
    {field} - string IP
    {field} - int Port

    {method} + WebsocketData(string IP, int Port)
    {method} + string GetIP()
    {method} + int GetPort()
}

Struct WiFiData
{
    {field} - string SSID
    {field} - string Password

    {method} + WiFiHandlerData(string SSID, string Password)
    {method} + string GetSSID()
    {method} + string GetPassword()
}

Interface IDipSwitch
{
    {abstract} + bool Read(int Bit)
}

class DipSwitch
{
    {method} + DipSwitch(int[] pins)
    {method} + bool Read(int Bit)
}


Interface IMasterSlave
{
    {abstract} + void Send(int Address, Node_Registers Register, int Data)
    {abstract} + char[] Receive(int Address, Node_Registers Register)
}

enum Node_Registers
{
    RequestForm = 0x0,
    Notificatie = 0x1,
    RGB = 0x2,
    Item = 0x3,
    Actief = 0x4,
    Error = 0x5
}

class I2C
{
    ' {field} - int Address
    ' {field} - int[] KnownAddresses
    ' {method} + I2C_Controller(int Address)
    ' {method} + void Scan()
    ' {method} + void Send(int Address, Node_Registers Register, int Data)
    ' {method} + char[] Receive(int Address, Node_Registers Register)
}

Class JsonBuilder
{
    {method} + char[] Serialize(string action, int data)
    {method} + char[] Serialize(string[] actions, int[] data, int size)
    {method} + bool Deserialize(char[] json)
}

note left of JsonBuilder : Implementatie wordt geleverd door de\nArduinoJson Library
note top of JsonBuilder : Kijk naar gebruik van pointers

' EMPTY CLASSES
Class CANBus
' END OF EMPYY CLASSES 

IMasterSlave <|.. I2C
IMasterSlave <|.. CANBus
IDipSwitch <|.. DipSwitch

Controller "1" o-- "1" WiFiHandler
Controller "1" o-- "1" IMasterSlave
Controller "1" o-- "1" JsonBuilder
Controller "1" o-down- "1" IDipSwitch
Controller "1" o-- "1" WebSocketHandler

WiFiHandler "1" o-- "1" WiFiData
WebSocketHandler "1" o-- "1" WebsocketData

' See if we should separate WebSocket & WiFi

@enduml
